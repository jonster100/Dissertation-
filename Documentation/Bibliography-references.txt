Bibliography references - 

https://www.researchgate.net/publication/259461147_Selection_Methods_for_Genetic_Algorithms - analysis on different selection methods
[2]J. Khalid, "Selection Methods for Genetic Algorithms", International Journal of Emerging Sciences, 2013. [Accessed 6 March 2019].


https://github.com/red42/HTML5_Genetic_Cars
[3] Rafael Matsunaga, “HTML5_Genetic_Cars”, [Online] Available at: https://github.om/red42/HTML_Genetic_Cars

https://www.tutorialspoint.com/genetic_algorithms/genetic_algorithms_crossover.htm
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects
https://tcagley.wordpress.com/2013/09/12/kanban-process-improvement-and-bottlenecks/
https://constellation.uqac.ca/4390/1/algorithms-10-00123.pdf - clustering in selection
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.64.158&rep=rep1&type=pdf - more on clustering in EA's
https://arxiv.org/ftp/arxiv/papers/1602/1602.08313.pdf - reference on multi-mutations
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2871823/ - general mutation not EA based i think

https://www.researchgate.net/publication/307598841_Enhancing_Genetic_Algorithms_using_Multi_Mutations_Experimental_Results_on_the_Travelling_Salesman_Problem - more on multi-mutations

https://www.researchgate.net/publication/221700557_A_Comparative_Study_of_Adaptive_Crossover_Operators_for_GeneticAlgorithms_to_Resolve_the_Traveling_Salesman_Problem - crossover
https://pdfs.semanticscholar.org/3bda/cac99759ca1c71e241b815ea50226b05af70.pdf - crossover

https://link.springer.com/book/10.1007/3-540-61723-X  - check out


[1]A. Eiben and J. Smith, Introduction to evolutionary computing, 2nd ed. pp. 15-35.

[3]"Crossover (genetic algorithm)", Academic Dictionaries and Encyclopedias. [Online]. Available: http://enacademic.com/dic.nsf/enwiki/302339#One-point_crossover. [Accessed: 07- Apr- 2019].

[4]"Mutation (genetic algorithm)", Academic Dictionaries and Encyclopedias. [Online]. Available: http://enacademic.com/dic.nsf/enwiki/302648. [Accessed: 07- Apr- 2019].


[1] A. Eiben and J. Smith, Introduction to evolutionary computing, 2nd ed. pp. 15-35.
The common underlying idea among the various versions of Evolutionary algorithms is that given a population of individuals, operators are used to apply pressure to force evolution to these individuals over several generations.
[2] J. Khalid, "Selection Methods for Genetic Algorithms", International Journal of Emerging Sciences, 2013. [Accessed 6 March 2019].
Selection operators or parent selection operators (PSO) are aimed at exploiting the best characteristics of individuals of a given population. This type of operator chooses the most suitable individuals to have their recombined. Selection operators are varied in terms of how much selection is applied to the population, whether individuals are taken from the local or global population and the criteria in which an induvial is chosen
 [3]"Crossover (genetic algorithm)", Academic Dictionaries and Encyclopedias. [Online]. Available: http://enacademic.com/dic.nsf/enwiki/302339#One-point_crossover. [Accessed: 07- Apr- 2019].
Crossover operators within an Evolutionary algorithm are ways in which the algorithm takes more than one individual solution and recombines individual’s data based on a set of criteria to reproduce children for the next generation of individuals.
[4]"Mutation (genetic algorithm)", Academic Dictionaries and Encyclopedias. [Online]. Available: http://enacademic.com/dic.nsf/enwiki/302648. [Accessed: 07- Apr- 2019].
Mutation operators are used within Evolutionary algorithms to maintain genetic diversity from generation to generation. The basic principle of the operator is that there is that data within an individual would have a Random mutation which helps keeps genetic diversity within the population preventing individuals becoming too similar which helps avoid local minimum solutions.
[5]"About npm | npm Documentation", Docs.npmjs.com, 2019. [Online]. Available: https://docs.npmjs.com/about-npm/. [Accessed: 10- Apr- 2019].
[6]"Node.js Introduction", W3schools.com, 2019. [Online]. Available: https://www.w3schools.com/nodejs/nodejs_intro.asp. [Accessed: 10- Apr- 2019].
[7]"chrome.storage - Google Chrome", Developer.chrome.com, 2019. [Online]. Available: https://developer.chrome.com/apps/storage. [Accessed: 11- Apr- 2019].
[8]"Chrome DevTools  |  Tools for Web Developers  |  Google Developers", Google Developers, 2019. [Online]. Available: https://developers.google.com/web/tools/chrome-devtools/. [Accessed: 11- Apr- 2019].
[9]D. Therens, Selection schemes, elitist recombination, and selection intensity. Utrecht University: Information and Computing Sciences, 1998, p. 2.